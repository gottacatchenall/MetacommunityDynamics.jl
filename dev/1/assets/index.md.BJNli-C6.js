import{_ as e,c as t,o as i,aA as o}from"./chunks/framework.DoK0_3hI.js";const h=JSON.parse('{"title":"MetacommunityDynamics.jl","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),n={name:"index.md"};function l(s,a,r,u,c,d){return i(),t("div",null,a[0]||(a[0]=[o(`<h1 id="MetacommunityDynamics.jl" tabindex="-1">MetacommunityDynamics.jl <a class="header-anchor" href="#MetacommunityDynamics.jl" aria-label="Permalink to &quot;MetacommunityDynamics.jl {#MetacommunityDynamics.jl}&quot;">​</a></h1><p><strong>MetacommunityDynamics.jl</strong> is a package for simulation of ecosystem processes, specifically population and community dynamics on spatial graphs, written in the <em>Julia</em> language.</p><div class="tip custom-block"><p class="custom-block-title">Info</p><p>Note that MetacommunityDynamics.jl is still under development, and although the API is not expected to change a ton, we still do not yet guarantee it will remain constant until the first <code>v1.0</code> production release.</p></div><h2 id="Installation" tabindex="-1">Installation <a class="header-anchor" href="#Installation" aria-label="Permalink to &quot;Installation {#Installation}&quot;">​</a></h2><p>If you need to install Julia, you can do so using the <code>juliaup</code> installation manager with instructions found <a href="https://julialang.org/downloads/" target="_blank" rel="noreferrer">here</a>.</p><p>From within Julia, you can install the release with</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>using Pkg</span></span>
<span class="line"><span>Pkg.add(&quot;MetacommunityDynamics&quot;)</span></span></code></pre></div><p>Or from the <a href="https://docs.julialang.org/en/v1/stdlib/Pkg/" target="_blank" rel="noreferrer">REPL Pkg mode</a>, you can use</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pkg&gt; add MetacommunityDynamics</span></span></code></pre></div><h2 id="Background-and-Motivation" tabindex="-1">Background and Motivation <a class="header-anchor" href="#Background-and-Motivation" aria-label="Permalink to &quot;Background and Motivation {#Background-and-Motivation}&quot;">​</a></h2><ul><li>so this should justify the major elements that must be includeable in simulation</li></ul><hr><h2 id="Documentation-Structure" tabindex="-1">Documentation Structure <a class="header-anchor" href="#Documentation-Structure" aria-label="Permalink to &quot;Documentation Structure {#Documentation-Structure}&quot;">​</a></h2><p>This documentation is structured loosely using the <a href="https://diataxis.fr/" target="_blank" rel="noreferrer">Diátaxis</a> format, which separates documentation into four forms:</p><ol><li><p>Tutorials (a <em>learning-oriented</em> guided exploration of the software)</p></li><li><p>How-to Guides (a <em>goal-oriented</em> set of directions to accomplish something specific)</p></li><li><p>Reference (<em>information-oriented</em> &quot;techinical descriptions of the machinery&quot;)</p></li><li><p>Explanation (<em>understanding-oriented</em> discussions on the software design)</p></li></ol><h3 id="Tutorials" tabindex="-1">🐛 Tutorials <a class="header-anchor" href="#Tutorials" aria-label="Permalink to &quot;🐛 Tutorials {#Tutorials}&quot;">​</a></h3><ul><li><p><a href="./">Getting started with <code>MetacommunityDynamics.jl</code></a></p></li><li><p><a href="./"></a></p></li></ul><h3 id="How-to-Guides" tabindex="-1">🦋 How-to Guides <a class="header-anchor" href="#How-to-Guides" aria-label="Permalink to &quot;🦋 How-to Guides {#How-to-Guides}&quot;">​</a></h3><ul><li><a href="./"></a></li></ul><h3 id="Reference" tabindex="-1">📚 Reference <a class="header-anchor" href="#Reference" aria-label="Permalink to &quot;📚 Reference {#Reference}&quot;">​</a></h3><ul><li>Model Index <ul><li><p><a href="./">Population Models</a></p></li><li><p><a href="./">Metapopulation Models</a></p></li><li><p><a href="./">Community Models</a></p></li><li><p><a href="./">Metacommunity Models</a></p></li></ul></li></ul><h3 id="Explanation" tabindex="-1">🧪 Explanation <a class="header-anchor" href="#Explanation" aria-label="Permalink to &quot;🧪 Explanation {#Explanation}&quot;">​</a></h3><ul><li><a href="./">Model Design</a></li></ul>`,23)]))}const m=e(n,[["render",l]]);export{h as __pageData,m as default};
